{"version":3,"sources":["App.tsx","api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","index.tsx"],"names":["Field","id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","findUser","usersFromServer","find","todosFromServer","App","useState","vissibleTodos","setVissibleTodos","inputTitle","setInputTitle","selectedUser","setSelectedUser","showTitleError","setShowTitleError","showUserError","setShowUserError","newId","Math","max","handleChange","event","target","value","Title","replace","Select","Number","Error","action","method","onSubmit","preventDefault","foundUser","newTodo","placeholder","type","onChange","htmlFor","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c1853cf.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nenum Field {\n  Title = 'title',\n  Select = 'select',\n}\n\nconst findUser = (id: number) => (\n  usersFromServer.find(user => user.id === id) || null\n);\n\nconst todos = (): Todo[] => todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [vissibleTodos, setVissibleTodos] = useState<Todo[]>(todos);\n  const [inputTitle, setInputTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState<number>(0);\n  const [showTitleError, setShowTitleError] = useState(false);\n  const [showUserError, setShowUserError] = useState(false);\n\n  const newId = Math.max(...vissibleTodos.map(todo => todo.id)) + 1;\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case Field.Title:\n        setInputTitle(value.replace(/[^A-Za-zА-Яа-яЁё\\s]/g, ''));\n        setShowTitleError(false);\n        break;\n\n      case Field.Select:\n        setSelectedUser(Number(event.target.value));\n        setShowUserError(false);\n        break;\n\n      // eslint-disable-next-line no-useless-escape\n      default: throw new Error('Something went wrong ¯\\_(ツ)_/¯');\n        break;\n    }\n  };\n\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const foundUser = findUser(Number(selectedUser));\n    const newTodo: Todo = {\n      id: newId,\n      title: inputTitle,\n      completed: false,\n      userId: selectedUser,\n      user: foundUser || null,\n    };\n\n    if (!inputTitle) {\n      setShowTitleError(true);\n    } else {\n      setShowTitleError(false);\n    }\n\n    if (!selectedUser) {\n      setShowUserError(true);\n    } else {\n      setShowUserError(false);\n    }\n\n    if (!inputTitle || !selectedUser) {\n      return;\n    }\n\n    setVissibleTodos([...vissibleTodos, newTodo]);\n    setInputTitle('');\n    setSelectedUser(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              placeholder=\"Enter a title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name={Field.Title}\n              value={inputTitle}\n              onChange={handleChange}\n            />\n          </label>\n          {showTitleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">\n            User:&nbsp;\n            <select\n              id=\"select\"\n              data-cy=\"userSelect\"\n              name={Field.Select}\n              value={selectedUser}\n              onChange={handleChange}\n            >\n              <option value={0} disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n\n            </select>\n          </label>\n          {showUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={vissibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport className from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={className('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {/* <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n        {user?.name}\n      </a> */}\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}